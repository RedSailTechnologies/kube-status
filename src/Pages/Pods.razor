@page "/pods/{namespaceparam?}"

@using System

@inject NamespaceService NamespaceService
@inject PodService PodService
@inject IJSRuntime JS

<h1>Pods</h1>

@if (GetNamespacesError)
{
    <p>Unable to get namespaces. Please try again later.</p>
}
else
{
    <div class="form-group row mb-3">
        <div class="col-sm-4">
            <label for="namespaceSelect" class="form-label">Select a Namespace</label>
            <select class="form-select" id="namespaceSelect" @onchange="@OnSelect">
                @foreach (var ns in Namespaces)
                {
                    @if (@ns.Equals(@SelectedNamespace))
                    {
                        <option value=@ns selected>@ns</option>
                    }
                    else
                    {
                        <option value=@ns>@ns</option>
                    }
                }
            </select>
        </div>
        <div class="col-sm-2 offset-sm-6">
            <label for="logRows" class="form-label">Log Rows</label>
            <input type="number" class="form-control" id="logRows" @bind-value="LogRows">
        </div>
    </div>
}
@if (GetPodsError)
{
    <p>Unable to get pods. Please try again later.</p>
}
else
{
    @if (@NamespacedPods != null && @NamespacedPods.Any())
    {
        <TableTemplate Items="NamespacedPods" TItem="Pod" TableHeaderClass="thead-light">
            <TableHeader>
                <th>
                    <div class="form-group row">
                        <div class="col-xl-3 d-none d-xl-block">
                            <label class="form-label"><b>Pod</b></label>
                        </div>
                        <div class="col-xl-2 d-none d-xl-block">
                            <label class="form-label"><b>Component</b></label>
                        </div>
                        <div class="col-xl-1 d-none d-xl-block">
                            <label class="form-label"><b>Part Of</b></label>
                        </div>
                        <div class="col-xl-2 d-none d-xl-block">
                            <label class="form-label"><b>Version</b></label>
                        </div>
                        <div class="col-xl-1 d-none d-xl-block">
                            <label class="form-label"><b>Status</b></label>
                        </div>
                    </div>
                </th>
            </TableHeader>
            <RowTemplate>
                <td>
                    <div class="form-group row">
                        <div class="col-xl-3">
                            <h5 id="name-@context.PodName.Replace(".","-")" class="form-item">
                                @(string.IsNullOrWhiteSpace(context.Name) ?
                        context.PodName : context.Name)</h5>
                        </div>
                        <div class="col-xl-2">
                            @if (!string.IsNullOrWhiteSpace(context.Component))
                            {
                                <label for="component-@context.PodName.Replace(".","-")"
                        class="form-label d-xl-none"><b>Component:</b></label>
                                <span id="component-@context.PodName.Replace(".","-")" class="form-item">@context.Component</span>
                            }
                        </div>
                        <div class="col-xl-1">
                            @if (!string.IsNullOrWhiteSpace(context.PartOf))
                            {
                                <label for="part-of-@context.PodName.Replace(".","-")" class="form-label d-xl-none"><b>Part
                                        Of:</b></label>
                                <span id="part-of-@context.PodName.Replace(".","-")" class="form-item">@context.PartOf</span>
                            }
                        </div>
                        <div class="col-xl-2">
                            @if (!string.IsNullOrWhiteSpace(context.Version))
                            {
                                <label for="version-@context.PodName.Replace(".","-")"
                        class="form-label d-xl-none"><b>Version:</b></label>
                                <span id="version-@context.PodName.Replace(".","-")" class="form-item">@context.Version</span>
                            }
                        </div>
                        <div class="col-xl-1">
                            <label for="status-@context.PodName.Replace(".","-")"
                        class="form-label d-xl-none"><b>Status:</b></label>
                            <span id="status-@context.PodName.Replace(".","-")" class="form-item">@context.PodStatus</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-8 col-lg-12">
                            @if ((context.Containers != null && context.Containers.Any()) || (context.InitContainers != null &&
                           context.InitContainers.Any()))
                            {
                                <button class="btn btn-outline-dark btn-sm m-2 collapsed" type="button" data-bs-toggle="collapse"
                        data-bs-target="#@context.PodName.Replace(".","-")-collapseMoreDetails" aria-expanded="false"
                        aria-controls="collapseMoreDetails">
                                    <span class="show">Show</span><span class="hide">Hide</span> More Details
                                </button>
                            }

                            @if (context.Labels != null && context.Labels.Any())
                            {
                                <button class="btn btn-outline-dark btn-sm m-2 collapsed" type="button" data-bs-toggle="collapse"
                        data-bs-target="#@context.PodName.Replace(".","-")-collapseLabels" aria-expanded="false"
                        aria-controls="collapseLabels">
                                    <span class="show">Show</span><span class="hide">Hide</span> Pod Labels
                                </button>
                            }

                            @if (context.Annotations != null && context.Annotations.Any())
                            {
                                <button class="btn btn-outline-dark btn-sm m-2 collapsed" type="button" data-bs-toggle="collapse"
                        data-bs-target="#@context.PodName.Replace(".","-")-collapseAnnotations" aria-expanded="false"
                        aria-controls="collapseAnnotations">
                                    <span class="show">Show</span><span class="hide">Hide</span> Pod Annotations
                                </button>
                            }

                            @if (context.PodVolumes != null && context.PodVolumes.Any())
                            {
                                <button class="btn btn-outline-dark btn-sm m-2 collapsed" type="button" data-bs-toggle="collapse"
                        data-bs-target="#@context.PodName.Replace(".","-")-collapsePodVolumes" aria-expanded="false"
                        aria-controls="collapsePodVolumes">
                                    <span class="show">Show</span><span class="hide">Hide</span> Pod Volumes
                                </button>
                            }
                        </div>
                    </div>
                    <div class="row mb-2">
                        @if ((context.Containers != null && context.Containers.Any()) || (context.InitContainers != null &&
                       context.InitContainers.Any()))
                        {
                            <div class="collapse col-sm-12" id="@context.PodName.Replace(".","-")-collapseMoreDetails">
                                <div class="alert alert-info mb-2"><strong>Pod Name:</strong> @context.PodName</div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <label for="node-name-@context.PodName.Replace(".","-")" class="form-label"><b>Node
                                                Name</b></label>
                                        <p>@context.NodeName</p>
                                    </div>
                                    <div class="col-md-4">
                                        <label for="node-ip-@context.PodName.Replace(".","-")" class="form-label"><b>Node
                                                IP</b></label>
                                        <p>@context.HostIP</p>
                                    </div>
                                    <div class="col-md-4">
                                        @if (@context.PodIPs != null && context.PodIPs.Any())
                                        {
                                            @if (@context.PodIPs.Count > 1)
                                            {
                                                <label for="ip-@context.PodName.Replace(".","-")" class="form-label"><b>Pod IPs</b></label>
                                                <div id="ip-@context.PodName.Replace(".","-")" class="form-item">
                                                    <ul>
                                                        @foreach (var ip in context.PodIPs)
                                                        {
                                                            <li>@ip</li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                            else if (@context.PodIPs.Count == 1)
                                            {
                                                <label for="ip-@context.PodName.Replace(".","-")" class="form-label"><b>Pod IP</b></label>
                                                <div id="ip-@context.PodName.Replace(".","-")" class="form-item">@context.PodIPs[0]</div>
                                            }
                                            else
                                            {
                                                <div class="alert alert-warning">No Pod IP address was assigned.</div>
                                            }
                                        }
                                    </div>
                                </div>
                                @if (context.InitContainers != null && context.InitContainers.Any())
                                {
                                    <h5>Init Containers</h5>
                                    <TableTemplate
                        Items="@context.InitContainers.Select(s => new { s.ContainerStatus.Name, s.ContainerStatus.Started, s.ContainerStatus.Ready, s.ContainerStatus.RestartCount, s.ContainerStatus.Image, s.ContainerStatus.ImageID }).OrderBy(s => s.Name)"
                        TableClass="table-sm table-striped">
                                        <TableHeader>
                        <th>
                            <div class="form-group row">
                                <div class="col-xl-1">
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Container</b></label>
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Started</b></label>
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Ready</b></label>
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Restart Count</b></label>
                                </div>
                                <div class="col-xl-2">
                                    <label class="form-label d-none d-xl-block"><b>Image</b></label>
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Tag</b></label>
                                </div>
                                <div class="col-xl-4">
                                    <label class="form-label d-none d-xl-block"><b>Image ID</b></label>
                                </div>
                            </div>
                        </th>
                        </TableHeader>
                        <RowTemplate Context="statusContext">
                            <td>
                                <div class="form-group row mb-1">
                                    <div class="col-xl-1">
                                        <button class="btn btn-outline-dark btn-sm"
                            @onclick="() => GetLogs(context.Namespace, context.PodName, statusContext.Name)">Logs</button>
                                    </div>
                                    <div class="col-xl-1">
                                        <label for="name-@statusContext.Name" class="form-label d-xl-none"><b>Container:</b></label>
                                        <span id="name-@statusContext.Name" class="form-item">@statusContext.Name</span>
                                    </div>
                                    <div class="col-xl-1">
                                        <label for="started-@statusContext.Started" class="form-label d-xl-none"><b>Started:</b></label>
                                        <span id="started-@statusContext.Started" class="form-item">@statusContext.Started</span>
                                    </div>
                                    <div class="col-xl-1">
                                        <label for="ready-@statusContext.Ready" class="form-label d-xl-none"><b>Ready:</b></label>
                                        <span id="ready-@statusContext.Ready" class="form-item">@statusContext.Ready</span>
                                    </div>
                                    <div class="col-xl-1">
                                        <label for="restart-count-@statusContext.RestartCount" class="form-label d-xl-none"><b>Restart
                                                Count:</b></label>
                                        <span id="restart-count-@statusContext.RestartCount"
                            class="form-item">@statusContext.RestartCount</span>
                                    </div>
                                    <div class="col-xl-2">
                                        <label for="image-@statusContext.ImageID" class="form-label d-xl-none"><b>Image:</b></label>
                                        <span id="image-@statusContext.ImageID" class="form-item">@if
                            (statusContext.ImageID?.Split('@').Length > 1)
                                                            {
                                                @statusContext.ImageID?.Split('@')[0]
                                                            }
                                                            else
                                                            {
                                                @statusContext.Image?.Split(':')[0]
                                                            }</span>
                    </div>
                    <div class="col-xl-1">
                        <label for="tag-@statusContext.Image" class="form-label d-xl-none"><b>Tag:</b></label>
                        <span id="tag-@statusContext.Image" class="form-item">@if
                            (statusContext.Image.StartsWith("sha"))
                                                            {
                                                @statusContext.Image
                                                            }
                                                            else
                                                            {
                                                @statusContext.Image?.Split(':')[1]}</span>
                        </div>
                        <div class="col-xl-4">
                            <label for="image-id-@statusContext.ImageID" class="form-label d-xl-none"><b>Image
                                    ID:</b></label>
                            <span id="image-id-@statusContext.ImageID" class="form-item">@if
                            (statusContext.ImageID?.Split('@').Length > 1)
                                                            {
                                                @statusContext.ImageID?.Split('@')[1]
                                                            }
                        </span>
                    </div>
                </div>
            </td>
        </RowTemplate>
</TableTemplate>
                                }
                                @if (context.Containers != null && context.Containers.Any())
                                {
                <h5>Containers</h5>
                <TableTemplate
    Items="@context.Containers.Select(s => new { s.ContainerStatus.Name, s.ContainerStatus.Started, s.ContainerStatus.Ready, s.ContainerStatus.RestartCount, s.ContainerStatus.Image, s.ContainerStatus.ImageID }).OrderBy(s => s.Name)"
    TableClass="table-sm table-striped">
                    <TableHeader>
                        <th>
                            <div class="form-group row">
                                <div class="col-xl-1">
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Container</b></label>
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Started</b></label>
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Ready</b></label>
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Restart Count</b></label>
                                </div>
                                <div class="col-xl-2">
                                    <label class="form-label d-none d-xl-block"><b>Image</b></label>
                                </div>
                                <div class="col-xl-1">
                                    <label class="form-label d-none d-xl-block"><b>Tag</b></label>
                                </div>
                                <div class="col-xl-4">
                                    <label class="form-label d-none d-xl-block"><b>Image ID</b></label>
                                </div>
                            </div>
                        </th>
                    </TableHeader>
                    <RowTemplate Context="statusContext">
                        <td>
                            <div class="form-group row mb-1">
                                <div class="col-xl-1">
                                    <button class="btn btn-outline-dark btn-sm"
                        @onclick="() => GetLogs(context.Namespace, context.PodName, statusContext.Name)">Logs</button>
                                </div>
                                <div class="col-xl-1">
                                    <label for="name-@statusContext.Name" class="form-label d-xl-none"><b>Container:</b></label>
                                    <span id="name-@statusContext.Name" class="form-item">@statusContext.Name</span>
                                </div>
                                <div class="col-xl-1">
                                    <label for="started-@statusContext.Started" class="form-label d-xl-none"><b>Started:</b></label>
                                    <span id="started-@statusContext.Started" class="form-item">@statusContext.Started</span>
                                </div>
                                <div class="col-xl-1">
                                    <label for="ready-@statusContext.Ready" class="form-label d-xl-none"><b>Ready:</b></label>
                                    <span id="ready-@statusContext.Ready" class="form-item">@statusContext.Ready</span>
                                </div>
                                <div class="col-xl-1">
                                    <label for="restart-count-@statusContext.RestartCount" class="form-label d-xl-none"><b>Restart
                                            Count:</b></label>
                                    <span id="restart-count-@statusContext.RestartCount"
                        class="form-item">@statusContext.RestartCount</span>
                                </div>
                                <div class="col-xl-2">
                                    <label for="image-@statusContext.ImageID" class="form-label d-xl-none"><b>Image:</b></label>
                                    <span id="image-@statusContext.ImageID" class="form-item">@if
                        (statusContext.ImageID?.Split('@').Length > 1)
                                                            {
                                                @statusContext.ImageID?.Split('@')[0]
                                                            }
                                                            else
                                                            {
                                                @statusContext.Image?.Split(':')[0]
                                                            }</span>
                </div>
                <div class="col-xl-1">
                    <label for="tag-@statusContext.Image" class="form-label d-xl-none"><b>Tag:</b></label>
                    <span id="tag-@statusContext.Image" class="form-item">@if
                        (statusContext.Image.StartsWith("sha"))
                                                            {
                                                @statusContext.Image
                                                            }
                                                            else
                                                            {
                                                @statusContext.Image?.Split(':')[1]}</span>
                    </div>
                    <div class="col-xl-4">
                        <label for="image-id-@statusContext.ImageID" class="form-label d-xl-none"><b>Image
                                ID:</b></label>
                        <span id="image-id-@statusContext.ImageID" class="form-item">@if
                        (statusContext.ImageID?.Split('@').Length > 1)
                                                            {
                                                @statusContext.ImageID?.Split('@')[1]
                                                            }
                    </span>
                </div>
            </div>
        </td>
    </RowTemplate>
</TableTemplate>
                                }
            </div>
                        }
        </div>
        <div class="row mb-2">
                        @if (context.Labels != null && context.Labels.Any())
                        {
                <div class="collapse col-sm-12" id="@context.PodName.Replace(".","-")-collapseLabels">
                    <TableTemplate Items="@context.Labels" TableClass="table-sm table-striped">
                        <TableHeader>
                            <th colspan="2">Labels</th>
                        </TableHeader>
                        <RowTemplate Context="labelsContext">
                            <td>@labelsContext.Key</td>
                            <td>@labelsContext.Value</td>
                        </RowTemplate>
                    </TableTemplate>
                </div>
                        }
        </div>
        <div class="row mb-2">
                        @if (context.Annotations != null && context.Annotations.Any())
                        {
                <div class="collapse col-sm-12" id="@context.PodName.Replace(".","-")-collapseAnnotations">
                    <TableTemplate Items="@context.Annotations" TableClass="table-sm table-striped">
                        <TableHeader>
                            <th colspan="2">Annotations</th>
                        </TableHeader>
                        <RowTemplate Context="annotationsContext">
                            <td>@annotationsContext.Key</td>
                            <td>@annotationsContext.Value</td>
                        </RowTemplate>
                    </TableTemplate>
                </div>
                        }
        </div>
        <div class="row mb-2">
                        @if (context.PodVolumes != null && context.PodVolumes.Any())
                        {
                <div class="collapse col-sm-12" id="@context.PodName.Replace(".","-")-collapsePodVolumes">
                    <TableTemplate Items="@context.PodVolumes" TableClass="table-sm table-striped">
                        <TableHeader>
                            <th>Volumes</th>
                        </TableHeader>
                        <RowTemplate Context="podVolumesContext">
                            <td>@podVolumesContext</td>
                        </RowTemplate>
                    </TableTemplate>
                </div>
                        }
        </div>
        </td>
        </RowTemplate>
        </TableTemplate>
    }
    else if (NamespacedPods == null)
    {
        <div class="alert alert-info" role="alert">
            Loading Pods in @SelectedNamespace namespace...
        </div>
    }
    else
    {
        <div class="alert alert-primary" role="alert">
            No Pods Found
        </div>
    }
}

@code {
    [Parameter]
    public string NamespaceParam { get; set; }

    bool GetNamespacesError;
    bool GetPodsError;
    bool _shouldRender;
    IEnumerable<string> Namespaces = Array.Empty<string>();
    string SelectedNamespace = "default";
    IEnumerable<Pod> NamespacedPods;
    int LogRows = 100;

    protected override bool ShouldRender() => _shouldRender;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            NamespaceParam = NamespaceParam ?? "default";
            SelectedNamespace = NamespaceParam;

            var namespaces = await NamespaceService.GetAllNamespacesAsync();
            Namespaces = namespaces.Items.Select(i => i.Metadata.Name);

            await GetPods();

            _shouldRender = true;
        }
        catch
        {
            GetNamespacesError = true;
            GetPodsError = true;
        }
    }

    async Task OnSelect(ChangeEventArgs e)
    {
        SelectedNamespace = e.Value.ToString();
        await GetPods();
    }

    async Task GetPods()
    {
        NamespacedPods = await PodService.GetAllNamespacedPodsAsync(SelectedNamespace);
    }

    async Task GetLogs(string k8sNamespace, string podName, string name)
    {
        var logApi = $"/api/logs/{k8sNamespace}/{podName}/{name}?tail={LogRows}";
        await JS.InvokeVoidAsync("triggerFileDownload", "", logApi);
    }
}